{"version":3,"file":"static/js/808.5c786abd.chunk.js","mappings":"gPAEaA,EAAOC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wQAalBC,EAAYH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2KAUxBG,EAAYL,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4IASxBK,EAAaP,EAAAA,GAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,62B,mBCxBxB,SAASO,EAAeC,GACrC,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAGlBG,EAAe,SAAAC,GACnB,IAAAC,EAAwBD,EAAME,cAAtBT,EAAIQ,EAAJR,KAAMU,EAAKF,EAALE,MACd,OAAQV,GACN,IAAK,OACHC,EAAQS,GACR,MACF,IAAK,SACHL,EAAUK,GACV,MACF,QACE,OAEN,EASMC,EAAY,WAChBV,EAAQ,IACRI,EAAU,GACZ,EAEA,OACEO,EAAAA,EAAAA,MAAC5B,EAAI,CAAC6B,SAba,SAAAC,GACnBA,EAAEC,iBACFC,QAAQC,IAAIjB,EAAMI,GAClBT,EAAMkB,SAAS,CAAEb,KAAAA,EAAMI,OAAAA,IACvBO,GACF,EAQ+BO,SAAA,EAC3BN,EAAAA,EAAAA,MAACxB,EAAS,CAAA8B,SAAA,CAAC,6DAETC,EAAAA,EAAAA,KAAC7B,EAAS,CACR8B,KAAK,OACLpB,KAAK,OACLU,MAAOV,EACPqB,SAAUf,EACVgB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZL,EAAAA,EAAAA,KAAA,UACAP,EAAAA,EAAAA,MAACxB,EAAS,CAAA8B,SAAA,CAAC,4FAETC,EAAAA,EAAAA,KAAC7B,EAAS,CACR8B,KAAK,MACLpB,KAAK,SACLU,MAAON,EACPiB,SAAUf,EACVgB,QAAQ,yFACRC,MAAM,0FACNC,UAAQ,QAIZL,EAAAA,EAAAA,KAAC3B,EAAU,CAAC4B,KAAK,SAAQF,SAAC,gFAGhC,CCvEO,I,gBAAMO,EAAOxC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mQAahBuC,EAAkBzC,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,yIAQ3BwC,EAAU1C,EAAAA,GAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,2GAOlByC,EAAkB3C,EAAAA,GAAAA,KAAWQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,gDAK7B0C,EAAoB5C,EAAAA,GAAAA,KAAW6C,IAAAA,GAAA3C,EAAAA,EAAAA,GAAA,gDAK/B4C,EAAoB9C,EAAAA,GAAAA,OAAa+C,IAAAA,GAAA7C,EAAAA,EAAAA,GAAA,ggCCM9C,EAhCoB,SAAH8C,GAAA,IAAMC,EAAQD,EAARC,SAAUC,EAAeF,EAAfE,gBAAiBC,EAAaH,EAAbG,cAAa,OAC7DjB,EAAAA,EAAAA,KAACM,EAAI,CAAAP,SACFgB,EAASG,KAAI,SAAAC,GAAA,IAAGtC,EAAIsC,EAAJtC,KAAMI,EAAMkC,EAANlC,OAAQmC,EAAED,EAAFC,GAAE,OAC/B3B,EAAAA,EAAAA,MAACc,EAAe,CAAAR,SAAA,EACdN,EAAAA,EAAAA,MAACe,EAAO,CAAAT,SAAA,EACNN,EAAAA,EAAAA,MAACgB,EAAe,CAAAV,SAAA,CAAC,mCAAQlB,EAAK,UAC9BY,EAAAA,EAAAA,MAACiB,EAAiB,CAAAX,SAAA,CAAC,IAAEd,EAAO,WAE9Be,EAAAA,EAAAA,KAACY,EAAiB,CAACX,KAAK,SAASoB,QAAS,kBAAML,EAAgBI,EAAG,EAACrB,SAAC,sDAIrEC,EAAAA,EAAAA,KAACY,EAAiB,CAChBX,KAAK,SAELoB,QAAS,kBAAMJ,EAAc,CAAEpC,KAAAA,EAAMI,OAAAA,EAAQmC,GAAAA,GAAK,EAACrB,SACpD,mEAbmBqB,EAgBJ,KAEf,E,UChCIE,EAAcxD,EAAAA,GAAAA,MAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uNAY1BuD,EAAczD,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sHCKvC,EAde,SAAH8C,GAA6B,IAAvBvB,EAAKuB,EAALvB,MAAOW,EAAQY,EAARZ,SACvB,OACET,EAAAA,EAAAA,MAAC6B,EAAW,CAAAvB,SAAA,CAAC,qHAGXC,EAAAA,EAAAA,KAACuB,EAAW,CAACtB,KAAK,OAAOV,MAAOA,EAAOW,SAAUA,MAGvD,E,iFCZasB,EAAW1D,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iIASrByD,EAAU3D,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qiBCN3B0D,EAAYC,SAASC,cAAc,eAE1B,SAASC,EAAKf,GAAyB,IAAtBf,EAAQe,EAARf,SAAU+B,EAAOhB,EAAPgB,SACxCC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,SAAArC,GAEL,WAAXA,EAAEsC,MACJH,GAEJ,EAEA,OADAI,OAAOC,iBAAiB,UAAWH,GAC5B,WACLE,OAAOE,oBAAoB,UAAWJ,EACxC,CACF,GAAG,CAACF,IASJ,OAAOO,EAAAA,EAAAA,eACLrC,EAAAA,EAAAA,KAACwB,EAAQ,CAACH,QAPgB,SAAAjC,GACtBA,EAAME,gBAAkBF,EAAMkD,QAChCR,GAEJ,EAGyC/B,UACrCC,EAAAA,EAAAA,KAACyB,EAAO,CAAA1B,SAAEA,MAEZ2B,EAEJ,CC9BO,I,UAAMa,GAAYzE,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sLAUtBwE,GAAqB1E,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,wRAc/ByE,GAAY3E,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,qMAUrB0E,GAAQ5E,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,qM,sBCnCjB0E,GAAQ5E,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0LAUjBH,GAAOC,EAAAA,GAAAA,KAAWI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+MAWlBC,GAAYH,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,yHAQxBG,GAAYL,EAAAA,GAAAA,MAAYQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,4IASxBK,GAAaP,EAAAA,GAAAA,OAAa6C,IAAAA,GAAA3C,EAAAA,EAAAA,GAAA,40B,WCxBxB,SAAS2E,GAAa7B,GAAqB,IAAlBgB,EAAOhB,EAAPgB,QAASc,EAAI9B,EAAJ8B,KAC/C/C,QAAQC,IAAI8C,GACZ,IAAAnE,GAAwBC,EAAAA,EAAAA,UAASkE,EAAK/D,MAAKF,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA4BL,EAAAA,EAAAA,UAASkE,EAAK3D,QAAOD,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAIxB6D,GAAyBC,EAAAA,GAAAA,MAAlBC,GAA6CnE,EAAAA,EAAAA,GAAAiE,EAAA,GAA/B,GAGf1D,EAAe,SAAAC,GACnB,IAAAC,EAAwBD,EAAME,cAAtBT,EAAIQ,EAAJR,KAAMU,EAAKF,EAALE,MACd,OAAQV,GACN,IAAK,OACHC,EAAQS,GACR,MACF,IAAK,SACHL,EAAUK,GACV,MACF,QACE,OAEN,EAqBA,OACES,EAAAA,EAAAA,KAAAgD,EAAAA,SAAA,CAAAjD,UAGEN,EAAAA,EAAAA,MAAC5B,GAAI,CAAC6B,SAvBW,SAAAC,GACnBA,EAAEC,iBACFC,QAAQC,IAAIjB,EAAMI,GAClB,IAAMgE,EAAYL,EAAKxB,GACvBvB,QAAQC,IAAImD,GAEZF,EAAe,CAAElE,KAAAA,EAAMI,OAAAA,EAAQgE,UAAAA,IAG/BnB,GAIF,EAUiC/B,SAAA,EAC3BN,EAAAA,EAAAA,MAACiD,GAAK,CAAA3C,SAAA,CAAC,0IAA0B6C,EAAK/D,SACtCY,EAAAA,EAAAA,MAACxB,GAAS,CAAA8B,SAAA,CAAC,yBAETC,EAAAA,EAAAA,KAAC7B,GAAS,CACR8B,KAAK,OACLpB,KAAK,OACLU,MAAOV,EACPqB,SAAUf,EACVgB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZL,EAAAA,EAAAA,KAAA,UACAP,EAAAA,EAAAA,MAACxB,GAAS,CAAA8B,SAAA,CAAC,4FAETC,EAAAA,EAAAA,KAAC7B,GAAS,CACR8B,KAAK,MACLpB,KAAK,SACLU,MAAON,EACPiB,SAAUf,EACVgB,QAAQ,yFACRC,MAAM,0FACNC,UAAQ,QAIZL,EAAAA,EAAAA,KAAC3B,GAAU,CAAC4B,KAAK,SAAQF,SAAC,oGAIlC,CClEe,SAASmD,KACtB,IAAM3D,GAAQ4D,EAAAA,GAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAM,IACzCC,GAAWC,EAAAA,GAAAA,MAEjBC,GAA6BC,EAAAA,GAAAA,MAArBb,EAAIY,EAAJZ,KAAMc,EAAUF,EAAVE,WACd7D,QAAQC,KAAI2D,EAAAA,GAAAA,OACZ,IAAAE,GAAwBC,EAAAA,GAAAA,MAAjBC,GAA4CjF,EAAAA,EAAAA,GAAA+E,EAAA,GAA/B,GACpBG,GAAqBC,EAAAA,GAAAA,MAAdC,GAAyCpF,EAAAA,EAAAA,GAAAkF,EAAA,GAA/B,GAEjBrF,GAAsCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CwF,EAAWtF,EAAA,GAAEuF,EAAcvF,EAAA,GAC5BwF,EAAc,WAAH,OAASD,GAAe,SAAAd,GAAK,OAAKA,CAAK,GAAE,EAgB1DrE,GAA0CL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjDqF,EAAapF,EAAA,GAAEqF,EAAgBrF,EAAA,GA0BtC,OACES,EAAAA,EAAAA,MAAC8C,GAAS,CAAAxC,SAAA,EAERC,EAAAA,EAAAA,KAAA,OACEsE,IAAKC,EACLC,IAAI,OAEJC,MAAM,MACNC,OAAO,SAGTjF,EAAAA,EAAAA,MAAC+C,GAAkB,CAAAzC,SAAA,EACjBC,EAAAA,EAAAA,KAACyC,GAAS,CAAA1C,SAAC,eACXC,EAAAA,EAAAA,KAACzB,EAAc,CAACmB,SApDH,SAAHoB,GAA0B,IAApBjC,EAAIiC,EAAJjC,KAAMI,EAAM6B,EAAN7B,OACpB0F,EAAU,CACd9F,KAAAA,EACAI,OAAAA,GAGF,GAAI2D,EAAKgC,MAAK,SAAAD,GAAO,OAAIA,EAAQ9F,OAASA,CAAI,IAE5C,OAAOgG,EAAAA,GAAAA,KAAW,GAADC,OAAIH,EAAQ9F,KAAI,iIAGnCmF,EAAWW,EACb,KAyCM3E,EAAAA,EAAAA,KAAC+E,EAAAA,GAAc,CACbC,SAAU,aACVC,UAAW,IACXC,MAAO,aAETlF,EAAAA,EAAAA,KAAC0C,GAAK,CAAA3C,SAAC,kBACPC,EAAAA,EAAAA,KAACmF,EAAM,CAAC5F,MAAOA,EAAOW,SAhCP,SAAAP,GACnB2D,GAAS8B,EAAAA,GAAAA,GAAazF,EAAEL,cAAcC,OACxC,IAgCOmE,IAAc1D,EAAAA,EAAAA,KAACqF,EAAAA,EAAO,IAEtBzC,IACC5C,EAAAA,EAAAA,KAACsF,EAAW,CACVvE,SAjCiB,WACzB,IAAMwE,EAAmBhG,EAAMiG,cAC/B,OAAO5C,EAAKS,QAAO,SAAAsB,GAAO,OACxBA,EAAQ9F,KAAK2G,cAAcC,SAASF,EAAiB,GAEzD,CA4BoBG,GACV1E,gBAAiB6C,EACjB5C,cApDU,SAAHE,GAA8B,IAAxBtC,EAAIsC,EAAJtC,KAAMI,EAAMkC,EAANlC,OAAQmC,EAAED,EAAFC,GAMnCiD,EALgB,CACdxF,KAAAA,EACAI,OAAAA,EACAmC,GAAAA,IAIF+C,GACF,IA8COF,IACCjE,EAAAA,EAAAA,KAAC6B,EAAK,CAACC,QAASqC,EAAYpE,UAC1BC,EAAAA,EAAAA,KAAC2C,GAAa,CAACb,QAASqC,EAAavB,KAAMwB,WAOvD,C","sources":["components/AddContactForm/AddContactForm.styled.js","components/AddContactForm/AddContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","views/ContactsView/ContactsView.styled.js","components/ContactEditor/ContactEditor.styled.js","components/ContactEditor/ContactEditor.jsx","views/ContactsView/ContactsView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  /* align-items: center; */\n  min-width: 800px;\n  border: 4px solid blue;\n  border-radius: 10px;\n  padding: 15px;\n  margin-bottom: 20px;\n  /* text-transform: capitalize; */\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 22px;\n  display: flex;\n  align-items: center;\n  align-content: center;\n  justify-content: space-between;\n  font-weight: bold;\n  color: blue;\n`;\n\nexport const FormInput = styled.input`\n  width: 60%;\n  margin-left: 20px;\n  height: 44px;\n  font-size: 20px;\n  color: blue;\n  border: 2px solid rgb(234, 255, 47);\n`;\n\nexport const FormButton = styled.button`\n  padding: 5px;\n  height: 44px;\n  /* border: 2px solid blue; */\n  box-shadow: 5px 5px 10px 1px #30ebfc;\n  border-radius: 10px;\n  border: none;\n  margin-top: 21px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 22px;\n  line-height: 16px;\n  transition: all 0.2s;\n  color: blue;\n  background-color: yellow;\n  cursor: pointer;\n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\n    box-shadow: 5px 5px 10px 1px #30ebfc;\n    color: #30ebfc;\n  }\n  &::after {\n    content: '';\n    height: 100%;\n    width: 100%;\n    border-radius: 10px;\n    top: 0;\n    left: 0;\n  }\n  &:hover::after {\n    transform: scaleX(1.4) scaleY(1.6);\n    // opacity: 0;\n  }\n  :active {\n    transform: translateY(-1px);\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n    box-shadow: 5px 5px 10px 1px #30ebfc;\n  }\n`;\n","// import './Form.styled.js';\nimport {\n  Form,\n  FormLabel,\n  FormInput,\n  FormButton,\n} from './AddContactForm.styled';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function AddContactForm(props) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  // console.log(name);\n  // console.log(number);\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(name, number);\n    props.onSubmit({ name, number });\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormLabel>\n        Ім'я котика:\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </FormLabel>\n      <br />\n      <FormLabel>\n        Номер для зв'язку:\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\" number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </FormLabel>\n      {/* <FormButton type=\"submit\">Add contact</FormButton> */}\n      <FormButton type=\"submit\">Додати котика</FormButton>\n    </Form>\n  );\n}\nAddContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-content: center;\n  align-items: stretch;\n  /* width: 600px; */\n  /* width: 100%; */\n  font-size: 20px;\n  padding: 10px;\n  margin-bottom: 15px;\n  margin-top: 0;\n`;\nexport const ContactListItem = styled.li`\n  display: flex;\n  padding: 10px;\n  /* align-items: baseline; */\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const Contact = styled.p`\n  /* width: 70%; */\n  display: flex;\n  justify-content: space-between;\n  margin-right: 30px;\n`;\n\nexport const ContactListName = styled.span`\n  color: darkblue;\n  display: flex;\n`;\n\nexport const ContactListNumber = styled.span`\n  color: darkcyan;\n  display: flex;\n`;\n\nexport const ContactListButton = styled.button`\n  /* display: flex;\n  align-items: center;\n  font-weight: bold;\n  font-size: 18px;\n  width: max-content;\n  /* height: 44px; */\n  /* padding: 5px; */\n  margin-left: 10px;\n  height: 44px;\n  box-shadow: 5px 5px 10px 1px #30ebfc;\n  border-radius: 10px;\n  border: none;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 22px;\n  line-height: 16px;\n  transition: all 0.2s;\n  color: blue;\n  background-color: yellow;\n  /* background-color: transparent; */\n  cursor: pointer;\n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\n    box-shadow: 5px 5px 10px 1px #30ebfc;\n    color: #30ebfc;\n  }\n  &::after {\n    content: '';\n    height: 100%;\n    width: 100%;\n    border-radius: 10px;\n    top: 0;\n    left: 0;\n  }\n  &:hover::after {\n    transform: scaleX(1.4) scaleY(1.6);\n    // opacity: 0;\n  }\n  :active {\n    transform: translateY(-1px);\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n    box-shadow: 5px 5px 10px 1px #30ebfc;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ContactList.styled.js';\nimport {\n  List,\n  ContactListItem,\n  ContactListNumber,\n  ContactListName,\n  Contact,\n  ContactListButton,\n} from './ContactList.styled';\n\n// const ContactList = ({ contacts, onDeleteContactList }) => (\nconst ContactList = ({ contacts, onDeleteContact, onEditContact }) => (\n  <List>\n    {contacts.map(({ name, number, id }) => (\n      <ContactListItem key={id}>\n        <Contact>\n          <ContactListName> Котик {name} : </ContactListName>\n          <ContactListNumber> {number} </ContactListNumber>\n        </Contact>\n        <ContactListButton type=\"button\" onClick={() => onDeleteContact(id)}>\n          Видалити\n          {/* Delete */}\n        </ContactListButton>\n        <ContactListButton\n          type=\"button\"\n          // contacts={contacts}\n          onClick={() => onEditContact({ name, number, id })}\n        >\n          Редагувати\n        </ContactListButton>\n      </ContactListItem>\n    ))}\n  </List>\n);\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  min-width: 600px;\n  font-size: 22px;\n  text-transform: initial;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-weight: bold;\n  color: blue;\n  margin-top: 20px;\n`;\n\nexport const FilterInput = styled.input`\n  width: 50%;\n  height: 44px;\n  font-size: 14px;\n  color: blue;\n  border: 2px solid rgb(234, 255, 47);\n`;\n","import React from 'react';\nimport './Filter.styled.js';\nimport { FilterLabel, FilterInput } from './Filter.styled';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <FilterLabel>\n      Знайти котика за ім'ям:\n      {/* Find contacts by name : */}\n      <FilterInput type=\"text\" value={value} onChange={onChange} />\n    </FilterLabel>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import styled from 'styled-components';\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nexport const Content = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n\n  transform: translate(-50%, -50%);\n  /* max-width: 600px; */\n  height: fit-content;\n  width: fit-content;\n  /* width: 50vw; */\n  padding: 50px;\n  background-color: #fff;\n  background: linear-gradient(lightblue, lightyellow);\n\n  border-radius: 10px;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Backdrop, Content } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ children, onClose }) {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      // console.log(e);\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  // handleKeyDown();\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <Content>{children}</Content>\n    </Backdrop>,\n    modalRoot\n  );\n}\n","import styled from 'styled-components';\n\n\nexport const Container = styled.div`\n  width: 100%;\n  /* width: auto; */\n  /* width: 640px; */\n  height: 100%;\n  display: flex;\n\n  background: linear-gradient(lightblue, lightyellow);\n  padding: 60px;\n`;\nexport const PhonebookContainer = styled.div`\n  width: 70%;\n  /* width: 640px; */\n  height: 100%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  font-size: 22px;\n  text-transform: uppercase;\n  color: blue;\n  /* background: linear-gradient(lightblue, lightyellow); */\n  padding: 30px;\n`;\n\nexport const Phonebook = styled.h1`\n  display: flex;\n  align-items: center;\n  /* justify-content: center; */\n  text-transform: uppercase;\n  font-size: 48px;\n  font-weight: 700;\n  color: blue;\n  margin-bottom: 10px;\n`;\nexport const Title = styled.h2`\n  display: flex;\n  align-items: center;\n  /* justify-content: center; */\n  text-transform: uppercase;\n  font-size: 36px;\n  font-weight: 700;\n  color: blue;\n  margin-bottom: 10px;\n`;\n\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-transform: none;\n  font-size: 24px;\n  font-weight: 700;\n  color: blue;\n  margin-bottom: 10px;\n`;\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  /* width: fit-content; */\n  width: 600px;\n  height: fit-content;\n  border: 4px solid blue;\n  padding: 15px;\n  /* text-transform: capitalize; */\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 22px;\n  display: flex;\n  justify-content: space-between;\n  font-weight: bold;\n  color: blue;\n`;\n\nexport const FormInput = styled.input`\n  width: 70%;\n  margin-left: 20px;\n  height: 44px;\n  font-size: 22px;\n  color: blue;\n  border: 2px solid rgb(234, 255, 47);\n`;\n\nexport const FormButton = styled.button`\n  padding: 5px;\n  height: 44px;\n  box-shadow: 5px 5px 10px 1px #30ebfc;\n  border-radius: 10px;\n  border: none;\n  margin-top: 21px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 22px;\n  line-height: 16px;\n  transition: all 0.2s;\n  color: blue;\n  background-color: yellow;\n  cursor: pointer;\n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);\n    box-shadow: 5px 5px 10px 1px #30ebfc;\n    color: #30ebfc;\n  }\n  &::after {\n    content: '';\n    height: 100%;\n    width: 100%;\n    border-radius: 10px;\n    top: 0;\n    left: 0;\n  }\n  &:hover::after {\n    transform: scaleX(1.4) scaleY(1.6);\n    // opacity: 0;\n  }\n  :active {\n    transform: translateY(-1px);\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);\n    box-shadow: 5px 5px 10px 1px #30ebfc;\n  }\n`;\n","import React from 'react';\nimport { useState } from 'react';\n// import { useParams } from 'react-router-dom';\n// import { connect } from 'react-redux';\n// import { authOperations } from '../../redux/auth';\n// import { useDispatch } from 'react-redux';\nimport {\n  Form,\n  FormLabel,\n  FormInput,\n  FormButton,\n  Title,\n} from './ContactEditor.styled';\nimport { useUpdateContactsMutation } from 'redux/itemsSlice';\nimport PropTypes from 'prop-types';\n\nexport default function ContactEditor({ onClose, data }) {\n  console.log(data);\n  const [name, setName] = useState(data.name);\n  const [number, setNumber] = useState(data.number);\n  // console.log(name);\n  // console.log(number);\n\n  const [updateContacts] = useUpdateContactsMutation();\n  // console.log(updateContact);\n  // console.log(useUpdateContactsMutation());\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(name, number);\n    const contactId = data.id;\n    console.log(contactId);\n    // if (name !== '' && number !== '') {\n    updateContacts({ name, number, contactId });\n    // resetForm();\n    // закивамо модалку\n    onClose();\n    return;\n    // }\n    // alert('Введіть імя та номер');\n  };\n  // const resetForm = () => {\n  //   setName('');\n  //   setNumber('');\n  // };\n\n  return (\n    <>\n      {/* <title>Edit Contact {name}</title> */}\n\n      <Form onSubmit={handleSubmit}>\n        <Title>Редагуємо контакт котика {data.name}</Title>\n        <FormLabel>\n          Ім'я :\n          <FormInput\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </FormLabel>\n        <br />\n        <FormLabel>\n          Номер для зв'язку:\n          <FormInput\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\" number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </FormLabel>\n        {/* <FormButton type=\"submit\">Add contact</FormButton> */}\n        <FormButton type=\"submit\">Зберегти контакт</FormButton>\n      </Form>\n    </>\n  );\n}\nContactEditor.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  data: PropTypes.object.isRequired,\n};\n","import AddContactForm from '../../components/AddContactForm';\nimport ContactList from '../../components/ContactList';\nimport Spinner from '../../components/Spinner';\nimport Filter from '../../components/Filter';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport cats from './cats.jpg';\nimport Modal from '../../components/Modal';\nimport {\n  Container,\n  PhonebookContainer,\n  Title,\n  Phonebook,\n  \n} from './ContactsView.styled';\nimport { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { updateFilter } from '../../redux/filterSlice';\nimport ContactEditor from '../../components/ContactEditor';\nimport {\n  useFetchContactsQuery,\n  useDeleteContactsMutation,\n  useCreateContactsMutation,\n  \n} from 'redux/itemsSlice';\n\nexport default function ContactsView() {\n  const value = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  \n  const { data, isFetching } = useFetchContactsQuery();\n  console.log(useFetchContactsQuery());\n  const [deleteContact] = useDeleteContactsMutation();\n  const [newContact] = useCreateContactsMutation();\n  \n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen(state => !state);\n\n  \n  const addContact = ({ name, number }) => {\n    const contact = {\n      name,\n      number,\n    };\n    \n    if (data.some(contact => contact.name === name)) {\n      \n      return toast.info(`${contact.name} вже такий контакт існує`);\n    }\n    \n    newContact(contact);\n  };\n  const [editedContact, setEditedContact] = useState(null);\n  \n  const editContact = ({ name, number, id }) => {\n    const contact = {\n      name,\n      number,\n      id,\n    };\n    setEditedContact(contact);\n    \n    toggleModal();\n  };\n\n  \n  const changeFilter = e => {\n    dispatch(updateFilter(e.currentTarget.value));\n  };\n\n  \n  const getVisibleContacts = () => {\n    const normalizedFilter = value.toLowerCase();\n    return data.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <Container>\n      {}\n      <img\n        src={cats}\n        alt=\"cats\"\n        \n        width=\"40%\"\n        height=\"40%\"\n      />\n      {}\n      <PhonebookContainer>\n        <Phonebook>Phonebook</Phonebook>\n        <AddContactForm onSubmit={addContact} />\n        <ToastContainer\n          position={'top-center'}\n          autoClose={3000}\n          theme={'colored'}\n        />\n        <Title> Contacts : </Title>\n        <Filter value={value} onChange={changeFilter} />\n        {}\n        {isFetching && <Spinner />}\n        {}\n        {data && (\n          <ContactList\n            contacts={getVisibleContacts()}\n            onDeleteContact={deleteContact}\n            onEditContact={editContact}\n          />\n        )}\n        {isModalOpen && (\n          <Modal onClose={toggleModal}>\n            <ContactEditor onClose={toggleModal} data={editedContact} />\n          </Modal>\n        )}\n      </PhonebookContainer>\n      {}\n    </Container>\n  );\n}\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","FormLabel","_templateObject2","FormInput","_templateObject3","FormButton","_templateObject4","AddContactForm","props","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","handleChange","event","_event$currentTarget","currentTarget","value","resetForm","_jsxs","onSubmit","e","preventDefault","console","log","children","_jsx","type","onChange","pattern","title","required","List","ContactListItem","Contact","ContactListName","ContactListNumber","_templateObject5","ContactListButton","_templateObject6","_ref","contacts","onDeleteContact","onEditContact","map","_ref2","id","onClick","FilterLabel","FilterInput","Backdrop","Content","modalRoot","document","querySelector","Modal","onClose","useEffect","handleKeyDown","code","window","addEventListener","removeEventListener","createPortal","target","Container","PhonebookContainer","Phonebook","Title","ContactEditor","data","_useUpdateContactsMut","useUpdateContactsMutation","updateContacts","_Fragment","contactId","ContactsView","useSelector","state","filter","dispatch","useDispatch","_useFetchContactsQuer","useFetchContactsQuery","isFetching","_useDeleteContactsMut","useDeleteContactsMutation","deleteContact","_useCreateContactsMut","useCreateContactsMutation","newContact","isModalOpen","setIsModalOpen","toggleModal","editedContact","setEditedContact","src","cats","alt","width","height","contact","some","toast","concat","ToastContainer","position","autoClose","theme","Filter","updateFilter","Spinner","ContactList","normalizedFilter","toLowerCase","includes","getVisibleContacts"],"sourceRoot":""}