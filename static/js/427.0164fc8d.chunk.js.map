{"version":3,"file":"static/js/427.0164fc8d.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","views/RegisterView/RegisterView.styled.js","views/RegisterView/RegisterView.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 600px;\n  /* border: 2px solid blue; */\n  border-radius: 10px;\n  padding: 15px;\n  text-transform: capitalize;\n  box-shadow: 5px 5px 20px 0px #30ebfc;\n  background: linear-gradient(lightblue, lightyellow);\n`;\n\nexport const FormLabel = styled.label`\n  /* width: 70%; */\n  font-size: 20px;\n  display: flex;\n  flex-direction: column;\n  /* justify-content: space-between; */\n  font-weight: bold;\n  color: blue;\n  margin-bottom: 10px;\n`;\n\nexport const FormInput = styled.input`\n  width: 70%;\n  margin-left: 20px;\n  height: 44px;\n  font-size: 14px;\n  color: blue;\n  border: 2px solid rgb(234, 255, 47);\n  :focus-visible {\n    border: 2px solid #30ebfc;\n    outline: none;\n  }\n`;\n\nexport const FormButton = styled.button`\n  margin-top: 44px;\n  display: flex;\n  align-items: center;\n  font-weight: bold;\n  font-size: 18px;\n  width: max-content;\n  /* height: 44px; */\n  padding: 5px;\n  color: rgb(19, 61, 248);\n  background-color: rgb(234, 255, 47);\n  border: 3px solid yellow;\n  /* box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2); */\n  box-shadow: 5px 5px 10px 1px #30ebfc;\n  box-shadow: 5px 5px 20px 5px #30ebfc;\n  /* box-shadow: 5px 5px 20px 5px #30ebfc; */\n  border-radius: 10px;\n  &:hover {\n    transform: translateY(-3px);\n\n    /* box-shadow: 5px 5px 10px 1px #30ebfc; */\n    /* box-shadow: 5px 5px 20px 5px #30ebfc; */\n    /* width: 115px;\n    height: 44px; */\n    /* background: #fff; */\n    /* border: 1px solid #ff6b01; */\n    color: #30ebfc;\n  }\n`;\n","import './RegisterForm.styled';\nimport { Form, FormLabel, FormInput, FormButton } from './RegisterForm.styled';\nimport { useState } from 'react';\n// import { useNavigate, useLocation } from 'react-router-dom';\nimport { authOperations } from '../../redux/auth';\nimport { useDispatch } from 'react-redux';\n// import { authSelectors } from '../../redux/auth';\n// import PropTypes from 'prop-types';\n\nexport default function RegisterForm(props) {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  console.log(name);\n  console.log(email);\n  console.log(password);\n\n  const dispatch = useDispatch();\n  // const navigate = useNavigate();\n  // const isRegistered = useSelector(authSelectors.getIsRegistered);\n  // const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  // const location = useLocation();\n  // console.log(location);\n  // useEffect(() => {\n  //   console.log(location.pathname);\n  //   console.log(isRegistered);\n  //   isRegistered ? navigate('/login') : navigate(location.pathname);\n  // }, [isRegistered, location.pathname, navigate]);\n  // isLoggedIn ? navigate('/contacts') : navigate(location.pathname);\n  // }, [isLoggedIn, location.pathname, navigate]);\n\n  const handleChange = event => {\n    // console.log(event);\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(email, password);\n    // при сабміті ми диспатчим цю операцію - визивамо функцію authOperations.register і передаємо туди обект нейм, емейл і паспорт\n    dispatch(authOperations.register({ name, email, password }));\n    // props.onSubmit({ name, email, password });\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <FormLabel>\n        *Ім'я :{/* Name : */}\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Введіть своє ім'я\"\n          // placeholder=\"Enter your name\"\n        />\n      </FormLabel>\n      <br />\n      <FormLabel>\n        *Поштова скинька :{/* Email : */}\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          required\n          placeholder=\"name@example.com\"\n          // placeholder=\"Enter your email\"\n        />\n      </FormLabel>\n      <br />\n      <FormLabel>\n        *Секретний пароль :{/* Password : */}\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          pattern=\"{ '9': '[0-9]', 'a': '[A-Za-z]', '*': '[A-Za-z0-9]' }\"\n          // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          // title=\"Password must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          // autocomplete\n          maxlength=\"14\"\n          minlength=\"6\"\n          // placeholder=\"Password must be min 6 and max 14 symbols\"\n          placeholder=\"Пароль має містити не меньше 6 та не більше 14 символів\"\n        />\n      </FormLabel>\n      <FormButton type=\"submit\">Зареєструватися</FormButton>\n      {/* <FormButton type=\"submit\">Sign up</FormButton> */}\n    </Form>\n  );\n}\n// RegisterForm.propTypes = {\n//   onSubmit: PropTypes.func.isRequired,\n// };\n","import styled from 'styled-components';\nimport ballons from './ballons.jpg';\nexport const Container = styled.div`\n  min-height: calc(100vh - 50px);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: linear-gradient(lightblue, lightyellow);\n`;\nexport const RegisterFormContainer = styled.div`\n  padding: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  border-radius: 10px;\n  background-color: #fff;\n  box-shadow: 5px 5px 20px 0px #30ebfc;\n`;\nexport const WellcomeContainer = styled.div`\n  width: calc(20vw - 0px);\n  min-height: calc(50vh - 0px);\n  display: flex;\n  align-items: center;\n  margin-right: 30px;\n  border-radius: 10px;\n  background-size: cover;\n  background-image: url(${ballons});\n  background-repeat: no-repeat;\n  box-shadow: 5px 5px 20px 0px #30ebfc;\n`;\nexport const Title = styled.h1`\n  font-weight: 500;\n  font-size: 48px;\n  text-align: center;\n  color: #30ebfc;\n  margin-bottom: 30px;\n`;\n","import RegisterForm from '../../components/RegisterForm';\nimport {\n  Container,\n  Title,\n  RegisterFormContainer,\n  WellcomeContainer,\n} from './RegisterView.styled';\nimport { ToastContainer } from 'react-toastify';\n\nexport default function RegisterView() {\n  return (\n    <Container>\n      <ToastContainer\n        position={'bottom-center'}\n        autoClose={4000}\n        theme={'colored'}\n      />\n      <RegisterFormContainer>\n        <WellcomeContainer>\n          <Title>Сторінка реєстрації користувача</Title>\n        </WellcomeContainer>\n        <RegisterForm />\n      </RegisterFormContainer>\n    </Container>\n  );\n}\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","FormLabel","_templateObject2","FormInput","_templateObject3","FormButton","_templateObject4","RegisterForm","props","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","console","log","dispatch","useDispatch","handleChange","event","_event$currentTarget","currentTarget","value","resetForm","_jsxs","onSubmit","e","preventDefault","authOperations","autoComplete","children","_jsx","type","onChange","title","required","placeholder","pattern","maxlength","minlength","Container","RegisterFormContainer","WellcomeContainer","ballons","Title","RegisterView","ToastContainer","position","autoClose","theme"],"sourceRoot":""}